{"version":3,"file":"static/js/415.6cfa3ac0.chunk.js","mappings":"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","sources":["components/ToastBar.js","pages/AdminDashboard.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import React, {\r\n  useState,\r\n  forwardRef,\r\n  useImperativeHandle,\r\n  useRef,\r\n  useEffect,\r\n} from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst ToastBar = forwardRef((props, ref) => {\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n  const timeoutRef = useRef(null);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    show() {\r\n      setShowSnackbar(true);\r\n      timeoutRef.current = setTimeout(() => {\r\n        setShowSnackbar(false);\r\n      }, 3000);\r\n    },\r\n  }));\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (timeoutRef.current) {\r\n        clearTimeout(timeoutRef.current);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      className=\"toast-bar\"\r\n      id={showSnackbar ? \"show\" : \"hide\"}\r\n      style={{\r\n        backgroundColor: props.notification.success ? \"#3fff14\" : \"#FF0033\",\r\n      }}\r\n    >\r\n      <div className=\"message\">{props.notification.message}</div>\r\n      <div className=\"symbol\">\r\n        <div className=\"line\"></div>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ToastBar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ToastBar from \"../components/ToastBar\";\r\n\r\nconst AdminDashboard = () => {\r\n  const [clicked, setClicked] = useState(\"rez\");\r\n  const [reviews, setReviews] = useState([]);\r\n  const [applys, setApplys] = useState([]);\r\n  const [image, setImage] = useState(\"\");\r\n  const [video, setVideo] = useState(\"\");\r\n  const [notification, setNotification] = useState({\r\n    message: \"\",\r\n    success: \"\",\r\n  });\r\n  const snackbarRef = useRef(null);\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n  const [loading, setLoading] = useState(true);\r\n  const [loading1, setLoading1] = useState(true);\r\n\r\n  const fetchData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\"/api/apply\");\r\n      setApplys(data);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n    setLoading(false);\r\n  };\r\n  const getReview = async () => {\r\n    setLoading1(true);\r\n    try {\r\n      const { data } = await axios.get(\"/api/guestbook\");\r\n\r\n      setReviews(data);\r\n    } catch (error) {\r\n      console.error(error.message);\r\n    }\r\n    setLoading1(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n    getReview();\r\n  }, []);\r\n\r\n  const handleSubmit = (e, index, id) => {\r\n    //console.log(index);\r\n    const vis = reviews.filter((rev) => rev._id === id);\r\n    const visible = !vis[0].isVisible;\r\n    let newArr = [...reviews];\r\n    newArr[index].isVisible = visible;\r\n\r\n    axios.put(`api/guestbook/${id}`, newArr[index]);\r\n    setReviews(newArr);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", image);\r\n\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = axios\r\n      .post(\"/api/index/addPhoto\", formData, config, {\r\n        onUploadProgress: (progressEvent) => {\r\n          let { loaded, total } = progressEvent;\r\n          let procent = Math.floor((loaded * 100) / total);\r\n          //console.log(\"aaa\"`${loaded}`);\r\n        },\r\n      })\r\n      .then((res) => {\r\n        //console.log(res.data);\r\n        setNotification(res.data);\r\n        snackbarRef.current.show();\r\n      })\r\n      .catch((err) => {\r\n        //console.log(err);\r\n        setNotification(err);\r\n        snackbarRef.current.show();\r\n      });\r\n  };\r\n\r\n  const submitVideoHandler = async (e) => {\r\n    e.preventDefault();\r\n    //console.log(\"first\", video);\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    try {\r\n      const { data } = await axios.post(\r\n        \"/api/index/addYouToube\",\r\n        {\r\n          video: video,\r\n        },\r\n\r\n        config\r\n      );\r\n      //console.log(data);\r\n      setNotification(data);\r\n      snackbarRef.current.show();\r\n    } catch (error) {\r\n      setNotification(error);\r\n    }\r\n  };\r\n  return (\r\n    <section className=\"docs-main admin\">\r\n      {snackbarRef ? (\r\n        <ToastBar ref={snackbarRef} notification={notification} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <div className=\"grid-2 admin-grid \">\r\n        <div className=\"card flex\">\r\n          <div className=\"card bg-light p-3 admin-menu\">\r\n            <h3 className=\"my-2 \">MENU</h3>\r\n\r\n            <nav>\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    onClick={() => setClicked(\"rez\")}\r\n                  >\r\n                    Evidencija rezervacija\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    onClick={() => setClicked(\"book\")}\r\n                  >\r\n                    Evidencija guestbook-a\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    onClick={() => setClicked(\"photo\")}\r\n                  >\r\n                    Dodaj sliku u Galeriju\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    className=\"btn btn-outline\"\r\n                    onClick={() => setClicked(\"video\")}\r\n                  >\r\n                    Dodaj video u Galeriju\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </div>\r\n        <div className=\"card flex\">\r\n          {clicked === \"rez\" ? (\r\n            <table className=\"apply-toure\">\r\n              <thead>\r\n                <tr>\r\n                  <th>TOUR NUMBER</th>\r\n                  <th>TOUR TYPE</th>\r\n                  <th>NAME </th>\r\n                  <th>ADDRESS </th>\r\n                  <th>EMAIL</th>\r\n                  <th>MOB</th>\r\n                  <th>NUMBER PERSON</th>\r\n                  <th>Detaljnije</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {!loading &&\r\n                  applys.reverse().map((apply) => (\r\n                    <tr key={apply._id}>\r\n                      <td>{apply.tour_number.tour_number}</td>\r\n                      <td>{apply.tour_type}</td>\r\n                      <td>{apply.name}</td>\r\n                      <td>{apply.address}</td>\r\n                      <td>{apply.email}</td>\r\n                      <td>{apply.mobitel}</td>\r\n                      <td>{apply.number_person}</td>\r\n                      <td>\r\n                        <Link to={`/admin-apply/${apply._id}`}>Detaljnije</Link>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n              </tbody>\r\n            </table>\r\n          ) : clicked === \"book\" ? (\r\n            <>\r\n              <table className=\"admin-guestbook\">\r\n                <thead>\r\n                  <tr>\r\n                    <th>NAME AND SURNAME</th>\r\n                    <th>CITY</th>\r\n                    <th>E-MAIL </th>\r\n                    <th>MESSAGE</th>\r\n                    <th>VIDLJIVO</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {!loading1 &&\r\n                    reviews.map((review, index) => (\r\n                      <tr key={review._id}>\r\n                        <td>{review.name}</td>\r\n                        <td>{review.email}</td>\r\n                        <td>{review.city}</td>\r\n                        <td>{review.message}</td>\r\n                        <td>\r\n                          <input\r\n                            type=\"checkbox\"\r\n                            name={review.name}\r\n                            id=\"vidiljvo\"\r\n                            checked={review.isVisible}\r\n                            onChange={(e) => handleSubmit(e, index, review._id)}\r\n                          />\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n                </tbody>\r\n              </table>\r\n            </>\r\n          ) : clicked === \"photo\" ? (\r\n            <div>\r\n              <h3>Dodaj sliku u galeriju</h3>\r\n              <form onSubmit={submitHandler}>\r\n                <input\r\n                  type=\"file\"\r\n                  onChange={(e) => setImage(e.target.files[0])}\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"SPREMI\"\r\n                  className=\"btn btn-outline\"\r\n                />\r\n              </form>\r\n            </div>\r\n          ) : (\r\n            <div>\r\n              <h3>Dodaj video u galeriju</h3>\r\n              <form onSubmit={submitVideoHandler}>\r\n                <input type=\"text\" onChange={(e) => setVideo(e.target.value)} />\r\n                <input\r\n                  type=\"submit\"\r\n                  value=\"SPREMI\"\r\n                  className=\"btn btn-outline\"\r\n                />\r\n              </form>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["ToastBar","forwardRef","props","ref","useState","showSnackbar","setShowSnackbar","timeoutRef","useRef","useImperativeHandle","show","current","setTimeout","useEffect","clearTimeout","className","id","style","backgroundColor","notification","success","message","clicked","setClicked","reviews","setReviews","applys","setApplys","image","setImage","video","setVideo","setNotification","snackbarRef","userInfo","useSelector","state","userLogin","loading","setLoading","loading1","setLoading1","fetchData","axios","data","console","error","getReview","submitVideoHandler","e","preventDefault","config","headers","Authorization","token","onClick","reverse","map","apply","tour_number","tour_type","name","address","email","mobitel","number_person","to","_id","review","index","city","type","checked","isVisible","onChange","visible","filter","rev","newArr","handleSubmit","onSubmit","formData","FormData","append","onUploadProgress","progressEvent","loaded","total","Math","floor","then","res","catch","err","target","files","value","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iterableToArray","unsupportedIterableToArray","TypeError"],"sourceRoot":""}