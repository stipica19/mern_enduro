{"version":3,"file":"static/js/947.19d27304.chunk.js","mappings":"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","sources":["components/ToastBar.js","components/TextField.js","pages/Apply.js","../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/init/init.js","../node_modules/@emailjs/browser/es/methods/send/send.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","../node_modules/moment/locale/hr.js"],"sourcesContent":["import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport \"../App.css\";\r\n\r\nconst ToastBar = forwardRef((props, ref) => {\r\n  const [showSnackbar, setShowSnackbar] = useState(false);\r\n\r\n  useImperativeHandle(ref, () => ({\r\n    show() {\r\n      setShowSnackbar(true);\r\n      setTimeout(() => {\r\n        setShowSnackbar(false);\r\n      }, 3000);\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div\r\n      className=\"toast-bar\"\r\n      id={showSnackbar ? \"show\" : \"hide\"}\r\n      style={{\r\n        backgroundColor: props.notification.success ? \"#3fff14\" : \"#FF0033\",\r\n      }}\r\n    >\r\n      <div className=\"message\">{props.notification.message}</div>\r\n      <div className=\"symbol\">\r\n        <div className=\"line\"></div>\r\n        <div className=\"line\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default ToastBar;\r\n","import React, { useState } from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst TextField = ({ name, value, onChange, title, required }) => {\r\n  const [touch, setTouch] = useState(false);\r\n  const isValid = value !== \"\";\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"date-form\">\r\n      <div className=\"form-control\">\r\n        <label>{title}</label>\r\n        <input\r\n          style={{\r\n            border: touch ? !isValid && required && \"1px solid red\" : null,\r\n          }}\r\n          type=\"text\"\r\n          name={name}\r\n          value={value}\r\n          onChange={onChange}\r\n          onBlur={() => setTouch(true)}\r\n        />\r\n        {touch\r\n          ? !isValid &&\r\n            required && (\r\n              <span className={!isValid && `error-input`}>\r\n                {t(\"input_field\")}\r\n              </span>\r\n            )\r\n          : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TextField;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport \"moment/locale/hr\";\r\nimport ToastBar from \"../components/ToastBar\";\r\nimport emailjs from \"@emailjs/browser\";\r\nimport TextField from \"../components/TextField\";\r\nimport { useMemo } from \"react\";\r\n\r\nconst Apply = () => {\r\n  const { t } = useTranslation();\r\n\r\n  const travelingOptions = [\r\n    {\r\n      label: \"-\",\r\n      value: \"\",\r\n    },\r\n    {\r\n      label: \"Car\",\r\n      value: \"car\",\r\n    },\r\n    {\r\n      label: \"Plane\",\r\n      value: \"plane\",\r\n    },\r\n  ];\r\n\r\n  const tourTypeOptions = [\r\n    {\r\n      label: \"-\",\r\n      value: \"\",\r\n    },\r\n    {\r\n      label: `Tour 1  (${t(\"tour1_p1\")}) `,\r\n      value: \"tour 1\",\r\n    },\r\n    {\r\n      label: `Tour 2  (${t(\"tour2_p1\")}) `,\r\n      value: \"tour 2\",\r\n    },\r\n    {\r\n      label: `Tour 3  (${t(\"tour3_p1\")}) `,\r\n      value: \"tour 3\",\r\n    },\r\n  ];\r\n\r\n  const [tour_type, setTourType] = useState(\"\");\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [address, setAddress] = useState(\"\");\r\n  const [mobitel, setMobitel] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const [number_person, setNumberPerson] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [traveling, setTraveling] = useState(\"\");\r\n  const [tour_number, setTourNumber] = useState(\"\");\r\n  const [rentaBike, setRentaBike] = useState(false);\r\n  const [accept, setAccept] = useState(false);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const snackbarRef = useRef(null);\r\n  const [notification, setNotification] = useState({\r\n    message: \"\",\r\n    success: false,\r\n  });\r\n  const form = useRef();\r\n\r\n  const [termine, setTermine] = useState([]);\r\n  const [display, setDiplayForm] = useState();\r\n\r\n  const getTermine = async () => {\r\n    try {\r\n      const response = await axios.get(\"/api/tours/\");\r\n      setTermine(response.data);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const filteredTermine = useMemo(() => {\r\n    return termine.filter((data) => data.tour_number > 299);\r\n  }, [termine]);\r\n  useEffect(() => {\r\n    moment.locale(\"hr\");\r\n    getTermine();\r\n  }, [notification]);\r\n\r\n  const handeleRentaBike = () => setRentaBike(prevState => !prevState);\r\n\r\n  const sendEmail = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!accept) return;\r\n\r\n    setLoading(true);\r\n    try {\r\n      const { data } = await axios.post(\"/api/apply\", {\r\n        tour_type,\r\n        tour_number,\r\n        name,\r\n        address,\r\n        mobitel,\r\n        email,\r\n        number_person,\r\n        traveling,\r\n        rentaBike,\r\n        message,\r\n      });\r\n      \r\n      setNotification(data);\r\n      snackbarRef.current.show();\r\n      \r\n      emailjs.sendForm(\r\n        process.env.REACT_APP_YOUR_SERVICE_ID,\r\n        process.env.REACT_APP_YOUR_TEMPLATE_ID_APPLY,\r\n        form.current,\r\n        process.env.REACT_APP_YOUR_PUBLIC_KEY\r\n      ).catch(console.log);\r\n    } catch (error) {\r\n      setNotification(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  const [touch, setTouch] = useState(false);\r\n  const isValid = tour_type !== \"\";\r\n\r\n  return (\r\n    <section className=\"docs-main apply\">\r\n      {snackbarRef ? (\r\n        <ToastBar ref={snackbarRef} notification={notification} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <h1>{t(\"apply_title\")}</h1>\r\n      <div className=\"container\">\r\n        <p>{t(\"apply_p1\")}</p>\r\n        <p>{t(\"apply_p2\")} </p>\r\n        <p>{t(\"apply_p3\")}</p>\r\n        <p>{t(\"apply_p4\")}</p>\r\n        <p>{t(\"apply_p5\")}</p>\r\n        <p>{t(\"apply_p6\")}</p>\r\n\r\n        <h3 style={{ color: \"red\" }}>{t(\"apply_choose\")} &#128071;</h3>\r\n\r\n        <p\r\n          onClick={() => setDiplayForm(\"23\")}\r\n          style={display === \"23\" ? { color: \"red\" } : { color: \"white\" }}\r\n        ></p>\r\n      </div>\r\n\r\n      <div className=\"grid-apply container\">\r\n        <div className=\"card flex\">\r\n          {!loading ? (\r\n            <table className=\"moto-date\">\r\n              <thead>\r\n                <tr>\r\n                  <th>{t(\"apply_th1\")}</th>\r\n                  <th>{t(\"apply_th2\")}</th>\r\n                  <th>{t(\"apply_th3\")}</th>\r\n                  <th>{t(\"apply_th5\")}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {!display &&\r\n                  filteredTermine\r\n                    .sort((a, b) => a.tour_number - b.tour_number)\r\n                    .map((termine) => (\r\n                      <tr key={termine._id}>\r\n                        <td>{termine.tour_number}</td>\r\n                        <td>{moment(termine.checkIn_date).format(\"l\")}</td>\r\n                        <td>{moment(termine.checkOut_date).format(\"l\")}</td>\r\n                        <td\r\n                          className={`${\r\n                            termine.tour_space === 0\r\n                              ? \"rezervirano\"\r\n                              : \"slobodno\"\r\n                          }`}\r\n                        >\r\n                          {termine.tour_space !== 0 ? (\r\n                            <p>\r\n                              {t(\"apply_yesterm\")} {termine.tour_space}\r\n                            </p>\r\n                          ) : (\r\n                            <p>{t(\"apply_noterm\")}</p>\r\n                          )}\r\n                        </td>\r\n                      </tr>\r\n                    ))}\r\n              </tbody>\r\n            </table>\r\n          ) : (\r\n            \"Loading...\"\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"card flex\">\r\n          <div className=\"form card\">\r\n            <h1>{t(\"apply_anmelden\")}</h1>\r\n            <form ref={form} onSubmit={sendEmail}>\r\n              <div className=\"form-date grid\">\r\n                <div className=\"date-form\">\r\n                  <div className=\"form-control\">\r\n                    <label>{t(\"apply_tourtype\")}</label>\r\n                    <select\r\n                      selected\r\n                      name=\"tour_type\"\r\n                      onChange={(e) => {\r\n                        setTourType(e.target.value);\r\n                      }}\r\n                      onBlur={() => setTouch(true)}\r\n                      required\r\n                    >\r\n                      {tourTypeOptions.map((option, index) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>{\" \"}\r\n                  {touch ? !isValid && <span>{t(\"input_field\")}</span> : null}\r\n                </div>{\" \"}\r\n                <div className=\"date-form\">\r\n                  <div className=\"form-control\">\r\n                    <label>{t(\"apply_tournumber\")}</label>\r\n                    <select\r\n                      selected\r\n                      name=\"tour_number\"\r\n                      onChange={(e) => {\r\n                        setTourNumber(e.target.value);\r\n                      }}\r\n                      onBlur={() => setTouch(true)}\r\n                      required\r\n                    >\r\n                      {filteredTermine\r\n                        .sort((a, b) => a.tour_number - b.tour_number)\r\n                        .map(\r\n                          (termine) =>\r\n                            termine.tour_space > 0 && (\r\n                              <option\r\n                                key={termine.tour_number.value}\r\n                                value={termine.tour_number}\r\n                              >\r\n                                {termine.tour_number}\r\n                              </option>\r\n                            )\r\n                        )}\r\n                    </select>\r\n                  </div>{\" \"}\r\n                  {touch ? !isValid && <span>{t(\"input_field\")}</span> : null}\r\n                </div>{\" \"}\r\n                <TextField\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                  value={email}\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  title=\"EMAIL *\"\r\n                  required\r\n                />\r\n                <TextField\r\n                  onChange={(e) => setName(e.target.value)}\r\n                  value={name}\r\n                  name=\"name\"\r\n                  type=\"text\"\r\n                  title={t(\"contact_name\")}\r\n                  required\r\n                />\r\n                <TextField\r\n                  onChange={(e) => setNumberPerson(e.target.value)}\r\n                  value={number_person}\r\n                  name=\"number_person\"\r\n                  type=\"text\"\r\n                  title={t(\"apply_person\")}\r\n                  required\r\n                />\r\n                <TextField\r\n                  onChange={(e) => setAddress(e.target.value)}\r\n                  value={address}\r\n                  name=\"address\"\r\n                  type=\"text\"\r\n                  title=\"ADDRESS\"\r\n                />\r\n                <TextField\r\n                  onChange={(e) => setMobitel(e.target.value)}\r\n                  value={mobitel}\r\n                  name=\"mob\"\r\n                  type=\"text\"\r\n                  title={t(\"apply_tel\")}\r\n                />\r\n                <div className=\"date-form\">\r\n                  <div className=\"form-control\">\r\n                    <label>{t(\"apply_traveling\")}</label>\r\n                    <select\r\n                      name=\"traveling\"\r\n                      selected\r\n                      onChange={(e) => {\r\n                        setTraveling(e.target.value);\r\n                      }}\r\n                    >\r\n                      {travelingOptions.map((option, index) => (\r\n                        <option key={option.value} value={option.value}>\r\n                          {option.label}\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n                </div>\r\n                <div className=\"date-form \">\r\n                  <div className=\"renta-bike\">\r\n                    <label className=\"container1\">\r\n                      RENT A BIKE\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        name=\"rentaBike\"\r\n                        value=\"Rent a Bike\"\r\n                        checked={rentaBike}\r\n                        onChange={handeleRentaBike}\r\n                      />\r\n                      <span className=\"checkmark\"></span>\r\n                    </label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"date-form\">\r\n                <label htmlFor=\"message\">{t(\"contact_msg\")}</label>\r\n                <div className=\"form-control \">\r\n                  <textarea\r\n                    name=\"message\"\r\n                    id=\"\"\r\n                    cols=\"60\"\r\n                    rows=\"5\"\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                  ></textarea>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"date-form\">\r\n                <div className=\"form-control \">\r\n                  <label className=\"container1\">\r\n                    <p>{t(\"apply_accept\")}</p>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      name=\"accept\"\r\n                      required\r\n                      onChange={(e) => setAccept(e.target.checked)}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                  </label>\r\n                </div>\r\n              </div>\r\n              <div className=\"date-form\">\r\n                <input\r\n                  type=\"submit\"\r\n                  value={t(\"contact_btn\")}\r\n                  className=\"btn btn-primary\"\r\n                />\r\n              </div>\r\n              <div className=\"date-form\">\r\n                <div className=\"form-control \">\r\n                  <label htmlFor=\"*\">{t(\"apply_*\")}</label>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Apply;\r\n","export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse.status;\n        this.text = httpResponse.responseText;\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\n/**\n * Initiation\n * @param {string} publicKey - set the EmailJS public key\n * @param {string} origin - set the EmailJS origin\n */\nexport const init = (publicKey, origin = 'https://api.emailjs.com') => {\n    store._userID = publicKey;\n    store._origin = origin;\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\n/**\n * Send a template to the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {object} templatePrams - the template params, what will be set to the EmailJS template\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const send = (serviceID, templateID, templatePrams, publicKey) => {\n    const uID = publicKey || store._userID;\n    validateParams(uID, serviceID, templateID);\n    const params = {\n        lib_version: '3.6.2',\n        user_id: uID,\n        service_id: serviceID,\n        template_id: templateID,\n        template_params: templatePrams,\n    };\n    return sendPost('/api/v1.0/email/send', JSON.stringify(params), {\n        'Content-type': 'application/json',\n    });\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.6.2');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","//! moment.js locale configuration\n//! locale : Croatian [hr]\n//! author : Bojan Marković : https://github.com/bmarkovic\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    function translate(number, withoutSuffix, key) {\n        var result = number + ' ';\n        switch (key) {\n            case 'ss':\n                if (number === 1) {\n                    result += 'sekunda';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sekunde';\n                } else {\n                    result += 'sekundi';\n                }\n                return result;\n            case 'm':\n                return withoutSuffix ? 'jedna minuta' : 'jedne minute';\n            case 'mm':\n                if (number === 1) {\n                    result += 'minuta';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'minute';\n                } else {\n                    result += 'minuta';\n                }\n                return result;\n            case 'h':\n                return withoutSuffix ? 'jedan sat' : 'jednog sata';\n            case 'hh':\n                if (number === 1) {\n                    result += 'sat';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'sata';\n                } else {\n                    result += 'sati';\n                }\n                return result;\n            case 'dd':\n                if (number === 1) {\n                    result += 'dan';\n                } else {\n                    result += 'dana';\n                }\n                return result;\n            case 'MM':\n                if (number === 1) {\n                    result += 'mjesec';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'mjeseca';\n                } else {\n                    result += 'mjeseci';\n                }\n                return result;\n            case 'yy':\n                if (number === 1) {\n                    result += 'godina';\n                } else if (number === 2 || number === 3 || number === 4) {\n                    result += 'godine';\n                } else {\n                    result += 'godina';\n                }\n                return result;\n        }\n    }\n\n    var hr = moment.defineLocale('hr', {\n        months: {\n            format: 'siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca'.split(\n                '_'\n            ),\n            standalone: 'siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac'.split(\n                '_'\n            ),\n        },\n        monthsShort: 'sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.'.split(\n            '_'\n        ),\n        monthsParseExact: true,\n        weekdays: 'nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota'.split(\n            '_'\n        ),\n        weekdaysShort: 'ned._pon._uto._sri._čet._pet._sub.'.split('_'),\n        weekdaysMin: 'ne_po_ut_sr_če_pe_su'.split('_'),\n        weekdaysParseExact: true,\n        longDateFormat: {\n            LT: 'H:mm',\n            LTS: 'H:mm:ss',\n            L: 'DD.MM.YYYY',\n            LL: 'Do MMMM YYYY',\n            LLL: 'Do MMMM YYYY H:mm',\n            LLLL: 'dddd, Do MMMM YYYY H:mm',\n        },\n        calendar: {\n            sameDay: '[danas u] LT',\n            nextDay: '[sutra u] LT',\n            nextWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[u] [nedjelju] [u] LT';\n                    case 3:\n                        return '[u] [srijedu] [u] LT';\n                    case 6:\n                        return '[u] [subotu] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[u] dddd [u] LT';\n                }\n            },\n            lastDay: '[jučer u] LT',\n            lastWeek: function () {\n                switch (this.day()) {\n                    case 0:\n                        return '[prošlu] [nedjelju] [u] LT';\n                    case 3:\n                        return '[prošlu] [srijedu] [u] LT';\n                    case 6:\n                        return '[prošle] [subote] [u] LT';\n                    case 1:\n                    case 2:\n                    case 4:\n                    case 5:\n                        return '[prošli] dddd [u] LT';\n                }\n            },\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: 'za %s',\n            past: 'prije %s',\n            s: 'par sekundi',\n            ss: translate,\n            m: translate,\n            mm: translate,\n            h: translate,\n            hh: translate,\n            d: 'dan',\n            dd: translate,\n            M: 'mjesec',\n            MM: translate,\n            y: 'godinu',\n            yy: translate,\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n        ordinal: '%d.',\n        week: {\n            dow: 1, // Monday is the first day of the week.\n            doy: 7, // The week that contains Jan 7th is the first week of the year.\n        },\n    });\n\n    return hr;\n\n})));\n"],"names":["ToastBar","forwardRef","props","ref","useState","showSnackbar","setShowSnackbar","useImperativeHandle","show","setTimeout","className","id","style","backgroundColor","notification","success","message","name","value","onChange","title","required","touch","setTouch","isValid","t","useTranslation","border","type","onBlur","tourTypeOptions","label","tour_type","setTourType","setName","address","setAddress","mobitel","setMobitel","email","setEmail","number_person","setNumberPerson","setMessage","traveling","setTraveling","tour_number","setTourNumber","rentaBike","setRentaBike","accept","setAccept","loading","setLoading","snackbarRef","useRef","setNotification","form","termine","setTermine","display","setDiplayForm","getTermine","axios","response","data","console","error","filteredTermine","useMemo","filter","useEffect","moment","sendEmail","e","preventDefault","current","emailjs","process","catch","log","color","onClick","sort","a","b","map","checkIn_date","format","checkOut_date","tour_space","_id","onSubmit","selected","target","option","index","checked","prevState","htmlFor","cols","rows","store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","init","origin","_userID","templatePrams","uID","params","lib_version","user_id","service_id","template_id","template_params","JSON","stringify","sendForm","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","translate","number","withoutSuffix","result","defineLocale","months","split","standalone","monthsShort","monthsParseExact","weekdays","weekdaysShort","weekdaysMin","weekdaysParseExact","longDateFormat","LT","LTS","L","LL","LLL","LLLL","calendar","sameDay","nextDay","nextWeek","day","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","week","dow","doy","factory","require"],"sourceRoot":""}